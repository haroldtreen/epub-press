# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build
on:
  push:
    branches: ['*']
jobs:
  test_and_lint:
    runs-on: ubuntu-latest
    steps:
      - name: Use Node.js 14
        uses: actions/setup-node@v1
        with:
          node-version: 13
      - uses: actions/checkout@v2
      - run: npm ci
      - run: npm test
      - run: npm run lint
  publish:
    runs-on: ubuntu-latest
    needs: [test_and_lint]
    steps:
      - uses: actions/checkout@v2
      - name: Publish Docker
        uses: docker/build-push-action@v1
        with:
          repository: haroldtreen/epub-press/server
          registry: docker.pkg.github.com
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          tag_with_ref: true
          tags: latest,master
          cache_froms: haroldtreen/epub-press/server:latest
  deploy_stage:
    if: ${{ github.ref == 'stage' }}
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt Envs
        run: scripts/decrypt-secrets.sh
        env:
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Copy files
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ env.STAGE_HOST }}
          USERNAME: ${{ secrets.SSH_USERNAME }}
          KEY: ${{ secrets.SSH_KEY }}
        with:
          source: "./docker-compose.stage.yaml,envs/stage.env"
          target: "/usr/local/epub-press"
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
      - name: Restart Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.STAGE_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker-compose -f /usr/local/epub-press/docker-compose.stage.yaml pull 
            docker-compose -f /usr/local/epub-press/docker-compose.stage.yaml up -d
            docker system prune -a -f
  deploy_prod:
    # if: ${{ github.ref == 'master' }}
    runs-on: ubuntu-latest
    needs: [publish]
    steps:
      - uses: actions/checkout@v2
      - name: Decrypt Envs
        run: scripts/decrypt-secrets.sh
        env:
          PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
      - name: Copy files
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ env.PROD_HOST }}
          USERNAME: ${{ secrets.SSH_USERNAME }}
          KEY: ${{ secrets.SSH_KEY }}
        with:
          source: "./docker-compose.prod.yaml,envs/prod.env"
          target: "/usr/local/epub-press"
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
      - name: Restart Docker
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.PROD_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            docker-compose -f /usr/local/epub-press/docker-compose.prod.yaml pull 
            docker-compose -f /usr/local/epub-press/docker-compose.prod.yaml up -d
            docker system prune -a -f
env:
  CI: true
  STAGE_HOST: 165.227.186.65
  PROD_HOST: 45.55.36.106